cmake_minimum_required(VERSION 3.12)
project(uservice-dynconf CXX)

# Enable userver libraries that are needed in this project
set(USERVER_FEATURE_POSTGRESQL ON CACHE BOOL "" FORCE)

# Compatibility mode: some systems don't support these features
set(USERVER_FEATURE_CRYPTOPP_BLAKE2 OFF CACHE BOOL "" FORCE)

# Adding userver dependency
add_subdirectory(third_party/userver)
userver_setup_environment()

# Service target
add_executable("${PROJECT_NAME}"
  src/models/config.hpp
  src/utils/make_error.hpp
  src/utils/make_error.cpp
  src/cache/configs_cache.hpp
  src/cache/configs_cache.cpp
  src/handlers/admin_v1_configs.hpp
  src/handlers/admin_v1_configs.cpp
  src/handlers/configs_values.hpp
  src/handlers/configs_values.cpp
  src/handlers/admin_v1_configs_delete.hpp
  src/handlers/admin_v1_configs_delete.cpp
  src/sql/sql_query.hpp
  src/main.cpp
)

target_include_directories("${PROJECT_NAME}" PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/src")
target_link_libraries("${PROJECT_NAME}" userver-core userver-postgresql)

# Functional Tests
include(UserverTestsuite)
userver_testsuite_add_simple()

# Install
include(GNUInstallDirs)

if(DEFINED ENV{PREFIX})
  message(STATUS "Set install prefix: $ENV{PREFIX}")
  file(TO_CMAKE_PATH "$ENV{PREFIX}" PREFIX_PATH)
  set(CMAKE_INSTALL_PREFIX "${PREFIX_PATH}")
endif()

file(GLOB CONFIG_FILES ${CMAKE_CURRENT_SOURCE_DIR}/configs/*.yaml ${CMAKE_CURRENT_SOURCE_DIR}/configs/*.json)

install(TARGETS ${PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT ${PROJECT_NAME})
install(FILES ${CONFIGS_FILES} DESTINATION ${CMAKE_INSTALL_SYSCONFDIR}/${PROJECT_NAME} COMPONENT ${PROJECT_NAME})
