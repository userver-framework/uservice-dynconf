openapi: 3.0.0
info:
    description: Open source service dynamic configs by userver
    title: uservice-dynconf 1.0
    version: '1.1'

servers:
  - url: http://localhost:8083
    description: local

paths:
  /admin/v2/configs:
    post:
      description: Adding a new dynamic config variable for specific service.
      requestBody:
        description: Name and value of variable
        content:
          application/json:
            schema:
              $ref:  '#/components/schemas/variable_full'
      responses:
        '200':
          description: OK
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    uuid:
                      type: string
                              
              
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: Get configs with offset and limit (temporary variant)
      parameters:
      - in: query
        name: page
        description: number of configs on one page
        schema:
          type: integer
          default: 0                  
      - in: query
        name: limit
        description: max count of configs returned in one request
        schema:
          type: integer
          default: 50
      - in: query
        name: s
        description: searches for configs with the specified name
        schema:
          type: string                
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref:  '#/components/schemas/variable_full'
                  count:
                    type: integer
                  total:
                    type: integer
                                
                                
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            
  /admin/v2/services:
    get:
      description: get all configs uuids
      parameters:
      - in: query
        name: page
        description: number of configs on one page
        schema:
          type: integer
          default: 0                  
      - in: query
        name: limit
        description: max count of configs returned in one request
        schema:
          type: integer
          default: 50
      - in: query
        name: s
        description: searches for configs with the specified name
        schema:
          type: string 
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/config'
                  count:
                    type: integer
                  total:
                    type: integer
                  
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            
  /admin/v2/configs/{uuid}:
    patch:
      description: update variable with uuid
      parameters:
      - in: path
        required: true
        name: uuid
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
    delete:
      description: delete variable from config
      parameters:
      - in: path
        required: true
        name: uuid
        schema:
          type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: get value of variable
      parameters:
      - in: path
        required: true
        name: uuid
        schema:
          type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/variable_full'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /admin/v2/configs/{uuid}/clone:
    post:
      description: Clone an existing config. It can change service_name, config_name and config_value of cloned config if it does not contradict existing services and configurations.
      parameters:
      - in: path
        required: true
        name: uuid
        schema:
          type: string
      requestBody:
        description: Service name to assign to cloned service
        required: true
        content:
          application/json:
            schema:
              properties:
                service_name:
                  type: string
                config_name:
                  type: string
                config_value:
                  type: string
      responses:
        '200':
          description: Ok
          content:
              application/json:
                schema:
                  properties:
                    config_uuid:
                      type: string
                    service_uuid:
                      type: string
        '400':
          description: Field 'uuid' or 'service_name' is empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Config not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Service with that config_name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      description: Error
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          description: code error
        message:
          type: string
          description: message error
    variable:
      description: variable
      properties:
        uuid: 
          type: string
        name:
          type: string
        service:
          description: uuid
          type: string
    variable_full:
      description: variable
      properties:
        name:
          type: string
        service:
          description: uuid
          type: string
        value:
          type: string
    raw_config:
      description: confign in json format
      properties:
        config:
          type: string
    config:
      description: config from list
      properties:
        uuid:
          type: string
        name:
          type: string
    user:
      description: user info for /register
      properties:
        login:
          type: string
        password:
          type: string
